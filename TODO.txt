TODO
====

- Possible create 'nicer' exceptions based on a base transmogrifier exception

- Sprinkle helpful logging statements throughout

- Create default utility sections:

  - construction

  - catalog delaying (replace catalog index methods with queues until
    iteration is done). May not be needed pending another project.

  - workflow management

  - 'path' creation (insert Folders into the pipeline wherever required)

  - alternative path strategy: delay items until parents have been seen.

  - references

- Provide a UI for selecting and running pipelines

- Define a 'default import pipeline' variable in the transmogrifier section,
  so you can include a default set of sections that'll work for 95% of the
  transmogrifier import cases. The goal is to have a pipeline definition like
  this::

    include = collective.transmogrifier.ploneimport
    pipeline =
        my.specific.import.section
        ${transmogrifier:importpipeline}

- Perhaps utils.Expressions should grow an TAL iterator-like interface? YAGNI?
