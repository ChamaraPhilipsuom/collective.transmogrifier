TODO
====

- Possible create 'nicer' exceptions based on a base transmogrifier exception

- Sprinkle helpful logging statements throughout

- Create default utility sections:

  - construction (should take care of delayed cataloging, memory management,
    etc.)

  - workflow management

  - 'path' creation (insert Folders into the pipeline wherever required)

  - references

  - key mover (move the value of one key over to another)
  
  - key inserter (insert fixed values into a certain key)

- Provide a UI for selecting and running pipelines

- Add configuration inclusion a l√° buildout, using 'extends'.

- Define a 'default import pipeline' variable in the transmogrifier section,
  so you can include a default set of sections that'll work for 95% of the
  transmogrifier import cases. The goal is to have a pipeline definition like
  this::

    extends = collective.transmogrifier.ploneimport
    pipeline =
        my.specific.import.section
        ${transmogrifier:importpipeline}
